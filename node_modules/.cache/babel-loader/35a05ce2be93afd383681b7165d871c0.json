{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport warning from 'warning';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport { useForkRef } from '../utils/reactHelpers';\n\nfunction areEqualValues(a, b) {\n  if (_typeof(b) === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\n * @ignore - internal component.\n */\n\n\nvar SelectInput = React.forwardRef(function SelectInput(props, ref) {\n  var autoFocus = props.autoFocus,\n      autoWidth = props.autoWidth,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      disabled = props.disabled,\n      displayEmpty = props.displayEmpty,\n      IconComponent = props.IconComponent,\n      inputRefProp = props.inputRef,\n      _props$MenuProps = props.MenuProps,\n      MenuProps = _props$MenuProps === void 0 ? {} : _props$MenuProps,\n      multiple = props.multiple,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onFocus = props.onFocus,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      readOnly = props.readOnly,\n      renderValue = props.renderValue,\n      required = props.required,\n      SelectDisplayProps = props.SelectDisplayProps,\n      tabIndexProp = props.tabIndex,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'hidden' : _props$type,\n      value = props.value,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"required\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  var inputRef = React.useRef(null);\n  var displayRef = React.useRef(null);\n  var ignoreNextBlur = React.useRef(false);\n\n  var _React$useRef = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(),\n      menuMinWidthState = _React$useState[0],\n      setMenuMinWidthState = _React$useState[1];\n\n  var _React$useState2 = React.useState(false),\n      openState = _React$useState2[0],\n      setOpenState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      forceUpdate = _React$useState3[1];\n\n  var handleRef = useForkRef(ref, inputRefProp);\n  React.useImperativeHandle(handleRef, function () {\n    return {\n      focus: function focus() {\n        displayRef.current.focus();\n      },\n      node: inputRef.current,\n      value: value\n    };\n  }, [value]);\n  React.useEffect(function () {\n    if (isOpenControlled && openProp) {\n      // Focus the display node so the focus is restored on this element once\n      // the menu is closed.\n      displayRef.current.focus(); // Rerender with the resolve `displayRef` reference.\n\n      forceUpdate(function (n) {\n        return !n;\n      });\n    }\n\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus, isOpenControlled, openProp]);\n\n  var update = function update(open, event) {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayRef.current.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  var handleClick = function handleClick(event) {\n    // Opening the menu is going to blur the. It will be focused back when closed.\n    ignoreNextBlur.current = true;\n    update(true, event);\n  };\n\n  var handleClose = function handleClose(event) {\n    update(false, event);\n  };\n\n  var handleItemClick = function handleItemClick(child) {\n    return function (event) {\n      if (!multiple) {\n        update(false, event);\n      }\n\n      if (onChange) {\n        var newValue;\n\n        if (multiple) {\n          newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n          var itemIndex = value.indexOf(child.props.value);\n\n          if (itemIndex === -1) {\n            newValue.push(child.props.value);\n          } else {\n            newValue.splice(itemIndex, 1);\n          }\n        } else {\n          newValue = child.props.value;\n        }\n\n        event.persist();\n        event.target = {\n          value: newValue,\n          name: name\n        };\n        onChange(event, child);\n      }\n    };\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (ignoreNextBlur.current === true) {\n      // The parent components are relying on the bubbling of the event.\n      event.stopPropagation();\n      ignoreNextBlur.current = false;\n      return;\n    }\n\n    if (onBlur) {\n      event.persist();\n      event.target = {\n        value: value,\n        name: name\n      };\n      onBlur(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (!readOnly) {\n      var validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault(); // Opening the menu is going to blur the. It will be focused back when closed.\n\n        ignoreNextBlur.current = true;\n        update(true, event);\n      }\n    }\n  };\n\n  var open = isOpenControlled && displayRef.current ? openProp : openState;\n  delete other['aria-invalid'];\n  var display;\n  var displaySingle;\n  var displayMultiple = [];\n  var computeDisplay = false; // No need to display any value if the field is empty.\n\n  if (isFilled(props) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  var items = React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n    var selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error('Material-UI: the `value` prop must be an array ' + 'when using the `Select` component with `multiple`.');\n      }\n\n      selected = value.some(function (v) {\n        return areEqualValues(v, child.props.value);\n      });\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    return React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      role: 'option',\n      selected: selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  var menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayRef.current) {\n    menuMinWidth = displayRef.current.clientWidth;\n  }\n\n  var tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes.selectMenu, className, disabled && classes.disabled, {\n      filled: classes.filled,\n      outlined: classes.outlined\n    }[variant]),\n    ref: displayRef,\n    tabIndex: tabIndex,\n    role: \"button\",\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": open ? \"menu-\".concat(name || '') : undefined,\n    onKeyDown: handleKeyDown,\n    onBlur: handleBlur,\n    onClick: disabled || readOnly ? null : handleClick,\n    onFocus: onFocus // The id can help with end-to-end testing automation.\n    ,\n    id: name ? \"select-\".concat(name) : undefined\n  }, SelectDisplayProps), isEmpty(display) ? // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : display), React.createElement(\"input\", _extends({\n    value: Array.isArray(value) ? value.join(',') : value,\n    name: name,\n    ref: inputRef,\n    type: type,\n    autoFocus: autoFocus\n  }, other)), React.createElement(IconComponent, {\n    className: classes.icon\n  }), React.createElement(Menu, _extends({\n    id: \"menu-\".concat(name || ''),\n    anchorEl: displayRef.current,\n    open: open,\n    onClose: handleClose\n  }, MenuProps, {\n    MenuListProps: _extends({\n      role: 'listbox',\n      disableListWrap: true\n    }, MenuProps.MenuListProps),\n    PaperProps: _extends({}, MenuProps.PaperProps, {\n      style: _extends({\n        minWidth: menuMinWidth\n      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n    })\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If true, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the select will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * Use that prop to pass a ref callback to the native select element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value`.\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control `select` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {*} value The `value` provided to the component.\n   * @returns {ReactElement}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any.isRequired,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","map":{"version":3,"sources":["/home/aravind/Desktop/react-purple/node_modules/@material-ui/core/esm/Select/SelectInput.js"],"names":["_extends","_toConsumableArray","_objectWithoutProperties","_typeof","React","PropTypes","clsx","warning","Menu","isFilled","useForkRef","areEqualValues","a","b","String","isEmpty","display","trim","SelectInput","forwardRef","props","ref","autoFocus","autoWidth","children","classes","className","disabled","displayEmpty","IconComponent","inputRefProp","inputRef","_props$MenuProps","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","openProp","open","readOnly","renderValue","required","SelectDisplayProps","tabIndexProp","tabIndex","_props$type","type","value","variant","other","useRef","displayRef","ignoreNextBlur","_React$useRef","isOpenControlled","current","_React$useState","useState","menuMinWidthState","setMenuMinWidthState","_React$useState2","openState","setOpenState","_React$useState3","forceUpdate","handleRef","useImperativeHandle","focus","node","useEffect","n","update","event","clientWidth","handleClick","handleClose","handleItemClick","child","newValue","Array","isArray","itemIndex","indexOf","push","splice","persist","target","handleBlur","stopPropagation","handleKeyDown","validKeys","key","preventDefault","displaySingle","displayMultiple","computeDisplay","items","Children","map","isValidElement","process","env","NODE_ENV","Fragment","join","selected","Error","some","v","cloneElement","undefined","onClick","role","menuMinWidth","createElement","root","select","selectMenu","filled","outlined","concat","onKeyDown","id","dangerouslySetInnerHTML","__html","icon","anchorEl","MenuListProps","disableListWrap","PaperProps","style","minWidth","propTypes","bool","object","isRequired","string","elementType","oneOfType","func","number","any","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport warning from 'warning';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport { useForkRef } from '../utils/reactHelpers';\n\nfunction areEqualValues(a, b) {\n  if (_typeof(b) === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\n * @ignore - internal component.\n */\n\n\nvar SelectInput = React.forwardRef(function SelectInput(props, ref) {\n  var autoFocus = props.autoFocus,\n      autoWidth = props.autoWidth,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      disabled = props.disabled,\n      displayEmpty = props.displayEmpty,\n      IconComponent = props.IconComponent,\n      inputRefProp = props.inputRef,\n      _props$MenuProps = props.MenuProps,\n      MenuProps = _props$MenuProps === void 0 ? {} : _props$MenuProps,\n      multiple = props.multiple,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onFocus = props.onFocus,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      readOnly = props.readOnly,\n      renderValue = props.renderValue,\n      required = props.required,\n      SelectDisplayProps = props.SelectDisplayProps,\n      tabIndexProp = props.tabIndex,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'hidden' : _props$type,\n      value = props.value,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"required\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  var inputRef = React.useRef(null);\n  var displayRef = React.useRef(null);\n  var ignoreNextBlur = React.useRef(false);\n\n  var _React$useRef = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(),\n      menuMinWidthState = _React$useState[0],\n      setMenuMinWidthState = _React$useState[1];\n\n  var _React$useState2 = React.useState(false),\n      openState = _React$useState2[0],\n      setOpenState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      forceUpdate = _React$useState3[1];\n\n  var handleRef = useForkRef(ref, inputRefProp);\n  React.useImperativeHandle(handleRef, function () {\n    return {\n      focus: function focus() {\n        displayRef.current.focus();\n      },\n      node: inputRef.current,\n      value: value\n    };\n  }, [value]);\n  React.useEffect(function () {\n    if (isOpenControlled && openProp) {\n      // Focus the display node so the focus is restored on this element once\n      // the menu is closed.\n      displayRef.current.focus(); // Rerender with the resolve `displayRef` reference.\n\n      forceUpdate(function (n) {\n        return !n;\n      });\n    }\n\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus, isOpenControlled, openProp]);\n\n  var update = function update(open, event) {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayRef.current.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  var handleClick = function handleClick(event) {\n    // Opening the menu is going to blur the. It will be focused back when closed.\n    ignoreNextBlur.current = true;\n    update(true, event);\n  };\n\n  var handleClose = function handleClose(event) {\n    update(false, event);\n  };\n\n  var handleItemClick = function handleItemClick(child) {\n    return function (event) {\n      if (!multiple) {\n        update(false, event);\n      }\n\n      if (onChange) {\n        var newValue;\n\n        if (multiple) {\n          newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n          var itemIndex = value.indexOf(child.props.value);\n\n          if (itemIndex === -1) {\n            newValue.push(child.props.value);\n          } else {\n            newValue.splice(itemIndex, 1);\n          }\n        } else {\n          newValue = child.props.value;\n        }\n\n        event.persist();\n        event.target = {\n          value: newValue,\n          name: name\n        };\n        onChange(event, child);\n      }\n    };\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (ignoreNextBlur.current === true) {\n      // The parent components are relying on the bubbling of the event.\n      event.stopPropagation();\n      ignoreNextBlur.current = false;\n      return;\n    }\n\n    if (onBlur) {\n      event.persist();\n      event.target = {\n        value: value,\n        name: name\n      };\n      onBlur(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (!readOnly) {\n      var validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault(); // Opening the menu is going to blur the. It will be focused back when closed.\n\n        ignoreNextBlur.current = true;\n        update(true, event);\n      }\n    }\n  };\n\n  var open = isOpenControlled && displayRef.current ? openProp : openState;\n  delete other['aria-invalid'];\n  var display;\n  var displaySingle;\n  var displayMultiple = [];\n  var computeDisplay = false; // No need to display any value if the field is empty.\n\n  if (isFilled(props) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  var items = React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n    var selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error('Material-UI: the `value` prop must be an array ' + 'when using the `Select` component with `multiple`.');\n      }\n\n      selected = value.some(function (v) {\n        return areEqualValues(v, child.props.value);\n      });\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    return React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      role: 'option',\n      selected: selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  var menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayRef.current) {\n    menuMinWidth = displayRef.current.clientWidth;\n  }\n\n  var tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes.selectMenu, className, disabled && classes.disabled, {\n      filled: classes.filled,\n      outlined: classes.outlined\n    }[variant]),\n    ref: displayRef,\n    tabIndex: tabIndex,\n    role: \"button\",\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": open ? \"menu-\".concat(name || '') : undefined,\n    onKeyDown: handleKeyDown,\n    onBlur: handleBlur,\n    onClick: disabled || readOnly ? null : handleClick,\n    onFocus: onFocus // The id can help with end-to-end testing automation.\n    ,\n    id: name ? \"select-\".concat(name) : undefined\n  }, SelectDisplayProps), isEmpty(display) ? // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : display), React.createElement(\"input\", _extends({\n    value: Array.isArray(value) ? value.join(',') : value,\n    name: name,\n    ref: inputRef,\n    type: type,\n    autoFocus: autoFocus\n  }, other)), React.createElement(IconComponent, {\n    className: classes.icon\n  }), React.createElement(Menu, _extends({\n    id: \"menu-\".concat(name || ''),\n    anchorEl: displayRef.current,\n    open: open,\n    onClose: handleClose\n  }, MenuProps, {\n    MenuListProps: _extends({\n      role: 'listbox',\n      disableListWrap: true\n    }, MenuProps.MenuListProps),\n    PaperProps: _extends({}, MenuProps.PaperProps, {\n      style: _extends({\n        minWidth: menuMinWidth\n      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n    })\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If true, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the select will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * Use that prop to pass a ref callback to the native select element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value`.\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control `select` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {*} value The `value` provided to the component.\n   * @returns {ReactElement}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any.isRequired,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}