{"ast":null,"code":"var _jsxFileName = \"/home/aravind/Desktop/react-purple/src/app/basic-ui/ReportsTable.js\";\nimport React, { Component } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Id\",\n  field: \"id\",\n  hidden: true,\n  editable: \"never\"\n}, {\n  title: \"First Name\",\n  field: \"firstName\"\n}, {\n  title: \"Last Name\",\n  field: \"lastName\"\n}, {\n  title: \"Phone\",\n  field: \"phone\"\n}, {\n  title: \"Address 1\",\n  field: \"address1\"\n}, {\n  title: \"Address 2\",\n  field: \"address2\"\n}, {\n  title: \"City\",\n  field: \"city\"\n}, {\n  title: \"State\",\n  field: \"state\"\n}, {\n  title: \"Postcode\",\n  field: \"postcode\"\n}, {\n  title: \"Email\",\n  field: \"email\"\n}];\nconst data = [{\n  id: \"a\",\n  firstName: \"a\",\n  lastName: \"a\",\n  phone: \"a\",\n  address1: \"a\",\n  address2: \"a\",\n  city: \"a\",\n  state: \"a\",\n  postcode: \"a\",\n  email: \"a\"\n}, {\n  id: \"b\",\n  firstName: \"b\",\n  lastName: \"b\",\n  phone: \"b\",\n  address1: \"b\",\n  address2: \"b\",\n  city: \"b\",\n  state: \"b\",\n  postcode: \"b\",\n  email: \"b\"\n}];\n\nclass MaterialTableDemo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      columns: columns,\n      data: [],\n      tableRef: /*#__PURE__*/React.createRef(),\n      selected: false,\n      selectedRowId: null,\n      c: \"blue\",\n      currentRow: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(MaterialTable, {\n      options: {\n        rowStyle: rowData => ({\n          backgroundColor: this.state.selected && rowData.tableData.id === this.state.selectedRowId ? this.state.c : \"#fff\"\n        })\n      },\n      title: \"Editable Example\",\n      columns: columns,\n      data: data,\n      editable: {\n        onRowAdd: newData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = this.state.data;\n            data.push(newData);\n            this.setState({ ...this.state,\n              data\n            });\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = this.state.data;\n            data[data.indexOf(oldData)] = newData;\n            this.setState({ ...this.state,\n              data\n            });\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = this.state.data;\n            data.splice(data.indexOf(oldData), 1);\n            this.setState({ ...this.state,\n              data\n            });\n          }, 600);\n        })\n      },\n      onRowClick: (event, rowData) => {\n        // if the rowData.tableDate.id could be used on condidtional render\n        console.log(rowData);\n        this.setState({\n          currentRow: rowData\n        });\n        console.log(this.state.tableRef);\n\n        if (rowData.tableData.id === this.state.selectedRowId) {\n          this.setState({\n            selected: false\n          });\n          this.setState({\n            selectedRowId: null\n          });\n        } else {\n          this.setState({\n            selected: true\n          });\n          this.setState({\n            selectedRowId: rowData.tableData.id\n          });\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MaterialTableDemo;","map":{"version":3,"sources":["/home/aravind/Desktop/react-purple/src/app/basic-ui/ReportsTable.js"],"names":["React","Component","MaterialTable","columns","title","field","hidden","editable","data","id","firstName","lastName","phone","address1","address2","city","state","postcode","email","MaterialTableDemo","tableRef","createRef","selected","selectedRowId","c","currentRow","render","rowStyle","rowData","backgroundColor","tableData","onRowAdd","newData","Promise","resolve","setTimeout","push","setState","onRowUpdate","oldData","indexOf","onRowDelete","splice","event","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MaterialTable from \"material-table\";\n\nconst columns = [\n  {\n    title: \"Id\",\n    field: \"id\",\n    hidden: true,\n    editable: \"never\"\n  },\n  {\n    title: \"First Name\",\n    field: \"firstName\"\n  },\n  {\n    title: \"Last Name\",\n    field: \"lastName\"\n  },\n  {\n    title: \"Phone\",\n    field: \"phone\"\n  },\n  {\n    title: \"Address 1\",\n    field: \"address1\"\n  },\n  {\n    title: \"Address 2\",\n    field: \"address2\"\n  },\n  {\n    title: \"City\",\n    field: \"city\"\n  },\n  {\n    title: \"State\",\n    field: \"state\"\n  },\n  {\n    title: \"Postcode\",\n    field: \"postcode\"\n  },\n  {\n    title: \"Email\",\n    field: \"email\"\n  }\n];\n\nconst data = [\n  {\n    id: \"a\",\n    firstName: \"a\",\n    lastName: \"a\",\n    phone: \"a\",\n    address1: \"a\",\n    address2: \"a\",\n    city: \"a\",\n    state: \"a\",\n    postcode: \"a\",\n    email: \"a\"\n  },\n  {\n    id: \"b\",\n    firstName: \"b\",\n    lastName: \"b\",\n    phone: \"b\",\n    address1: \"b\",\n    address2: \"b\",\n    city: \"b\",\n    state: \"b\",\n    postcode: \"b\",\n    email: \"b\"\n  }\n];\n\nclass MaterialTableDemo extends Component {\n  state = {\n    columns: columns,\n    data: [],\n    tableRef: React.createRef(),\n    selected: false,\n    selectedRowId: null,\n    c: \"blue\",\n    currentRow: {}\n  };\n\n  render() {\n    return (\n      <MaterialTable\n        options={{\n          rowStyle: rowData => ({\n            backgroundColor:\n              this.state.selected &&\n              rowData.tableData.id === this.state.selectedRowId\n                ? this.state.c\n                : \"#fff\"\n          })\n        }}\n        title=\"Editable Example\"\n        columns={columns}\n        data={data}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = this.state.data;\n                data.push(newData);\n                this.setState({ ...this.state, data });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = this.state.data;\n                data[data.indexOf(oldData)] = newData;\n                this.setState({ ...this.state, data });\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = this.state.data;\n                data.splice(data.indexOf(oldData), 1);\n                this.setState({ ...this.state, data });\n              }, 600);\n            })\n        }}\n        onRowClick={(event, rowData) => {\n          // if the rowData.tableDate.id could be used on condidtional render\n          console.log(rowData);\n          this.setState({ currentRow: rowData });\n          console.log(this.state.tableRef);\n          if (rowData.tableData.id === this.state.selectedRowId) {\n            this.setState({ selected: false });\n            this.setState({ selectedRowId: null });\n          } else {\n            this.setState({ selected: true });\n            this.setState({ selectedRowId: rowData.tableData.id });\n          }\n        }}\n      />\n    );\n  }\n}\n\nexport default MaterialTableDemo;\n"]},"metadata":{},"sourceType":"module"}