[{"/home/aravind/Desktop/react-purple/src/index.js":"1","/home/aravind/Desktop/react-purple/src/serviceWorker.js":"2","/home/aravind/Desktop/react-purple/src/i18n.js":"3","/home/aravind/Desktop/react-purple/src/app/App.js":"4","/home/aravind/Desktop/react-purple/src/app/AppRoutes.js":"5","/home/aravind/Desktop/react-purple/src/app/shared/Navbar.js":"6","/home/aravind/Desktop/react-purple/src/app/shared/Footer.js":"7","/home/aravind/Desktop/react-purple/src/app/shared/Sidebar.js":"8","/home/aravind/Desktop/react-purple/src/app/shared/SettingsPanel.js":"9","/home/aravind/Desktop/react-purple/src/app/shared/Spinner.js":"10","/home/aravind/Desktop/react-purple/src/app/Projectform.js":"11","/home/aravind/Desktop/react-purple/src/app/basic-ui/ReportsTable.js":"12","/home/aravind/Desktop/react-purple/src/app/basic-ui/Dropdowns.js":"13","/home/aravind/Desktop/react-purple/src/app/basic-ui/Annovar.js":"14","/home/aravind/Desktop/react-purple/src/app/basic-ui/Analysis.js":"15","/home/aravind/Desktop/react-purple/src/app/basic-ui/Typography.js":"16","/home/aravind/Desktop/react-purple/src/app/dashboard/Dashboard.js":"17","/home/aravind/Desktop/react-purple/src/app/form-elements/BasicElements.js":"18","/home/aravind/Desktop/react-purple/src/app/tables/BasicTable.js":"19","/home/aravind/Desktop/react-purple/src/app/charts/ChartJs.js":"20","/home/aravind/Desktop/react-purple/src/app/icons/Mdi.js":"21","/home/aravind/Desktop/react-purple/src/app/error-pages/Error404.js":"22","/home/aravind/Desktop/react-purple/src/app/error-pages/Error500.js":"23","/home/aravind/Desktop/react-purple/src/app/user-pages/Register.js":"24","/home/aravind/Desktop/react-purple/src/app/user-pages/Login.js":"25","/home/aravind/Desktop/react-purple/src/app/user-pages/Lockscreen.js":"26","/home/aravind/Desktop/react-purple/src/app/general-pages/BlankPage.js":"27","/home/aravind/Desktop/react-purple/src/app/basic-ui/Reports1.js":"28","/home/aravind/Desktop/react-purple/src/app/basic-ui/Basespace.js":"29","/home/aravind/Desktop/react-purple/src/app/basic-ui/Basespace1.js":"30","/home/aravind/Desktop/react-purple/src/app/basic-ui/Analysis2.js":"31"},{"size":398,"mtime":1637559054558,"results":"32","hashOfConfig":"33"},{"size":4951,"mtime":1637296676576,"results":"34","hashOfConfig":"33"},{"size":14285,"mtime":1637296676364,"results":"35","hashOfConfig":"33"},{"size":2397,"mtime":1637302940434,"results":"36","hashOfConfig":"33"},{"size":3119,"mtime":1637642303786,"results":"37","hashOfConfig":"33"},{"size":3566,"mtime":1637642268434,"results":"38","hashOfConfig":"33"},{"size":541,"mtime":1637301751714,"results":"39","hashOfConfig":"33"},{"size":4837,"mtime":1637641267417,"results":"40","hashOfConfig":"33"},{"size":11943,"mtime":1637296676276,"results":"41","hashOfConfig":"33"},{"size":267,"mtime":1637296676312,"results":"42","hashOfConfig":"33"},{"size":8403,"mtime":1637313565849,"results":"43","hashOfConfig":"33"},{"size":6268,"mtime":1637644157466,"results":"44","hashOfConfig":"33"},{"size":35996,"mtime":1637296676260,"results":"45","hashOfConfig":"33"},{"size":2276,"mtime":1637641180752,"results":"46","hashOfConfig":"33"},{"size":4312,"mtime":1637574156730,"results":"47","hashOfConfig":"33"},{"size":18428,"mtime":1637296676260,"results":"48","hashOfConfig":"33"},{"size":4103,"mtime":1637312176002,"results":"49","hashOfConfig":"33"},{"size":32530,"mtime":1637296676268,"results":"50","hashOfConfig":"33"},{"size":18155,"mtime":1637296676312,"results":"51","hashOfConfig":"33"},{"size":7806,"mtime":1637296676264,"results":"52","hashOfConfig":"33"},{"size":268345,"mtime":1637296676272,"results":"53","hashOfConfig":"33"},{"size":1195,"mtime":1637296676268,"results":"54","hashOfConfig":"33"},{"size":1172,"mtime":1637296676268,"results":"55","hashOfConfig":"33"},{"size":2834,"mtime":1637296676316,"results":"56","hashOfConfig":"33"},{"size":2576,"mtime":1637296676316,"results":"57","hashOfConfig":"33"},{"size":1377,"mtime":1637296676316,"results":"58","hashOfConfig":"33"},{"size":183,"mtime":1637296676272,"results":"59","hashOfConfig":"33"},{"size":3722,"mtime":1637573376691,"results":"60","hashOfConfig":"33"},{"size":3050,"mtime":1637641111772,"results":"61","hashOfConfig":"33"},{"size":5339,"mtime":1637644208150,"results":"62","hashOfConfig":"33"},{"size":9589,"mtime":1637642327602,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"y62iqf",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},"/home/aravind/Desktop/react-purple/src/index.js",[],["130","131"],"/home/aravind/Desktop/react-purple/src/serviceWorker.js",[],"/home/aravind/Desktop/react-purple/src/i18n.js",[],"/home/aravind/Desktop/react-purple/src/app/App.js",[],"/home/aravind/Desktop/react-purple/src/app/AppRoutes.js",[],"/home/aravind/Desktop/react-purple/src/app/shared/Navbar.js",[],"/home/aravind/Desktop/react-purple/src/app/shared/Footer.js",[],"/home/aravind/Desktop/react-purple/src/app/shared/Sidebar.js",[],"/home/aravind/Desktop/react-purple/src/app/shared/SettingsPanel.js",[],"/home/aravind/Desktop/react-purple/src/app/shared/Spinner.js",[],"/home/aravind/Desktop/react-purple/src/app/Projectform.js",[],"/home/aravind/Desktop/react-purple/src/app/basic-ui/ReportsTable.js",["132","133","134"],"/home/aravind/Desktop/react-purple/src/app/basic-ui/Dropdowns.js",[],"/home/aravind/Desktop/react-purple/src/app/basic-ui/Annovar.js",[],"/home/aravind/Desktop/react-purple/src/app/basic-ui/Analysis.js",[],"/home/aravind/Desktop/react-purple/src/app/basic-ui/Typography.js",[],"/home/aravind/Desktop/react-purple/src/app/dashboard/Dashboard.js",[],"/home/aravind/Desktop/react-purple/src/app/form-elements/BasicElements.js",[],"/home/aravind/Desktop/react-purple/src/app/tables/BasicTable.js",[],"/home/aravind/Desktop/react-purple/src/app/charts/ChartJs.js",[],"/home/aravind/Desktop/react-purple/src/app/icons/Mdi.js",[],"/home/aravind/Desktop/react-purple/src/app/error-pages/Error404.js",[],"/home/aravind/Desktop/react-purple/src/app/error-pages/Error500.js",[],"/home/aravind/Desktop/react-purple/src/app/user-pages/Register.js",[],"/home/aravind/Desktop/react-purple/src/app/user-pages/Login.js",[],"/home/aravind/Desktop/react-purple/src/app/user-pages/Lockscreen.js",[],"/home/aravind/Desktop/react-purple/src/app/general-pages/BlankPage.js",[],"/home/aravind/Desktop/react-purple/src/app/basic-ui/Reports1.js",["135"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nconst Reports1 = () => {\n    return (\n        <div>\n        \n        <div className=\"row\">\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card  card-img-holder text-black\" style={{backgroundColor: '#fec107'}}>\n              <div className=\"card-body\">\n               \n                <h4  className=\"font-weight-normal mb-3 text-center\">Patient ID </h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card  card-img-holder text-black\" style={{backgroundColor: '#fec107'}}>\n              <div className=\"card-body\">\n            \n               <h4 className=\"font-weight-normal mb-3 text-center\">Patient Name</h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card  card-img-holder text-black\"  style={{backgroundColor: '#fec107'}}>\n              <div className=\"card-body\">\n            \n                <h4 className=\"font-weight-normal mb-3 text-center\">Cancer Type</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='col-12'>\n  \n          <p className=\"btn btn-secondary btn-lg btn-block \" style={{color:'black'}}>Reports/Patient ID</p>\n       </div>\n\n       <div className=\"row\">\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card  card-img-holder text-black\" style={{backgroundColor: '#fec107'}}>\n              <div className=\"card-body\">\n               \n                <h4  className=\"font-weight-normal mb-3 text-center\">Annotated Files </h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card  card-img-holder text-black\" style={{backgroundColor: '#fec107'}}>\n              <div className=\"card-body\">\n            \n               <h4 className=\"font-weight-normal mb-3 text-center\">BioSamples</h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card  card-img-holder text-black\"  style={{backgroundColor: '#fec107'}}>\n              <div className=\"card-body\">\n            \n                <h4 className=\"font-weight-normal mb-3 text-center\">Clinical Trials</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card  card-img-holder text-black\" style={{backgroundColor: '#fec107'}}>\n              <div className=\"card-body\">\n               \n                <h4  className=\"font-weight-normal mb-3 text-center\">DE Outputs </h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card  card-img-holder text-black\" style={{backgroundColor: '#fec107'}}>\n              <div className=\"card-body\">\n            \n               <h4 className=\"font-weight-normal mb-3 text-center\">DSP Outputs</h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card  card-img-holder text-black\"  style={{backgroundColor: '#fec107'}}>\n              <div className=\"card-body\">\n            \n                <h4 className=\"font-weight-normal mb-3 text-center\">MSI</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n        </div>\n\n        \n    )\n}\n\nexport default Reports1\n","/home/aravind/Desktop/react-purple/src/app/basic-ui/Basespace.js",[],"/home/aravind/Desktop/react-purple/src/app/basic-ui/Basespace1.js",["136","137","138"],"import React from \"react\";\nimport { forwardRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nexport default function MaterialTableDemo() {\n  const tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n      <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n      <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n      <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n      <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n  const columns = {\n    columns: [\n      { title: \"S.NO\", \n      field: \"name\",\n     \n      render: (rowData) => (\n        <Link\n        to={{ pathname: `/basic-ui/Annovar` }}\n        target=\"_self\"\n        style={{ textDecoration: 'none' }}\n      >\n        {rowData.name}\n      </Link>\n    \n    ) \n    },\n      { title: \"Owner\", \n      field: \"status\" ,\n      render: rowData => {\n        return(\n        rowData.status == \"Pending\" ? <p style={{ color: \"#E87722\", fontWeight: \"bold\" }}>{rowData.status}</p> :\n            rowData.status == \"SUCCESS\" ? <p style={{ color: \"#008240\", fontWeight: \"bold\" }}>{rowData.status}</p> :\n                <p style={{ color: \"#B0B700\", fontWeight: \"bold\" }}>{rowData.status}</p>\n        )},\n    },\n      { title: \"Project Name\", field: \"formate\" },\n      { title: \"Size\", field: \"costtype\" },\n      { title: \"Updated at\", field: \"adlistens\", type: \"costtype\" },\n     \n    ]\n  };\n\n  const data = {\n    data: [\n      {\n        name: \"Test Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 'TO pipeline',\n       \n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens:  'TO pipeline',\n       \n      },\n      {\n        name: \"DTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens:  'TO pipeline',\n        \n      }\n    ]\n  };\n\n  return (\n    <div style={{ maxWidth: \"90%\", margin: \"5vh auto\" }}>\n      <MaterialTable\n        title=\"Basespace/Projects\"\n        icons={tableIcons}\n        columns={columns.columns}\n        data={data.data}\n        \n        /*editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}*/\n      />\n    </div>\n  );\n}","/home/aravind/Desktop/react-purple/src/app/basic-ui/Analysis2.js",["139","140","141"],"import React from \"react\";\nimport { forwardRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function MaterialTableDemo() {\n  const tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n      <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n      <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n      <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n      <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n  const columns = {\n    columns: [\n      { title: \"Ad Name\", \n      field: \"name\",\n     \n      render: (rowData) => (\n        <Link\n        to={{ pathname: `/basic-ui/Annovar` }}\n        target=\"_self\"\n        style={{ textDecoration: 'none' }}\n      >\n        {rowData.name}\n      </Link>\n    \n    ) \n    },\n      { title: \"Status\", \n      field: \"status\",\n      render: rowData => {\n        return(\n        rowData.status == \"Pending\" ? <p style={{ color: \"#E87722\", fontWeight: \"bold\" ,paddingTop:'12px'}}>{rowData.status}</p> :\n            rowData.status == \"Success\" ? <p style={{ color: \"#008240\", fontWeight: \"bold\" ,paddingTop:'12px'}}>{rowData.status}</p> :\n                <p style={{ color: \"#B0B700\", fontWeight: \"bold\" ,paddingTop:'12px'}}>{rowData.status}</p>\n        )}, \n    \n    },\n      { title: \"Formate\", field: \"formate\" },\n      { title: \"Cost Type\", field: \"costtype\" },\n      { title: \"Ad Listens\", field: \"adlistens\", type: \"numeric\" },\n      { title: \"Ads Served\", field: \"adserved\", type: \"numeric\" },\n      { title: \"Budget\", field: \"budget\", type: \"numeric\" },\n      { title: \"End Date\", field: \"enddate\", type: \"date\" }\n    ]\n  };\n\n  const data = {\n    data: [\n      {\n        name: \"Test Ad\",\n        status: \"Progress\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-02-2025\"\n      },\n      \n      {\n        name: \"ZTest Ad\",\n        status: \"Success\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n      {\n        name: \"ZTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-05-2025\"\n      },\n\n      {\n        name: \"DTest Ad\",\n        status: \"Pending\",\n        formate: \"Radio/Podcast\",\n        costtype: \"PPL\",\n        adlistens: 0,\n        adserved: 0,\n        budget: \"$100\",\n        enddate: \"02-01-2025\"\n      }\n    ]\n  };\n\n  return (\n    <div style={{ maxWidth: \"90%\", margin: \"5vh auto\" }}>\n      <MaterialTable\n        title=\"Reports\"\n        icons={tableIcons}\n        columns={columns.columns}\n        data={data.data}\n        \n        /*\\\\editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}*/\n      />\n    </div>\n  );\n}",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":20,"column":10,"nodeType":"148","messageId":"149","endLine":20,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":70,"column":24,"nodeType":"152","messageId":"153","endLine":70,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":71,"column":28,"nodeType":"152","messageId":"153","endLine":71,"endColumn":30},{"ruleId":"146","severity":1,"message":"154","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":20,"column":10,"nodeType":"148","messageId":"149","endLine":20,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":70,"column":24,"nodeType":"152","messageId":"153","endLine":70,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":71,"column":28,"nodeType":"152","messageId":"153","endLine":71,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":20,"column":10,"nodeType":"148","messageId":"149","endLine":20,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":71,"column":24,"nodeType":"152","messageId":"153","endLine":71,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":72,"column":28,"nodeType":"152","messageId":"153","endLine":72,"endColumn":30},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]